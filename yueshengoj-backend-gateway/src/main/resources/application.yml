spring:
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
    gateway:
      routes:
        - id: yueshengoj-backend-user-service
          uri: lb://yueshengoj-backend-user-service
          predicates:
            - Path=/api/user/**
        - id: yueshengoj-backend-question-service
          uri: lb://yueshengoj-backend-question-service
          predicates:
            - Path=/api/question/**
        - id: yueshengoj-backend-judge-service
          uri: lb://yueshengoj-backend-judge-service
          predicates:
            - Path=/api/judge/**
  main:
    web-application-type: reactive
  application:
    name: yueshengoj-backend-gateway
server:
  port: 8101
knife4j:
  gateway:
    # ① 第一个配置，开启gateway聚合组件
    enabled: true
    # ② 第二行配置，设置聚合模式采用discover服务发现的模式
    strategy: discover
    discover:
      # ③ 第三行配置，开启discover模式
      enabled: true
      # ④ 第四行配置，聚合子服务全部为Swagger2规范的文档
      version: swagger2

#knife4j:
#  # 聚合swagger文档
#  gateway:
#    enabled: true
#    # 排序规则(tag/operation排序自4.2.0版本新增)
#    # 取值：alpha-默认排序规则，官方swagger-ui默认实现,order-Knife4j提供的增强排序规则，开发者可扩展x-order，根据数值来自定义排序
#    tags-sorter: order
#    operations-sorter: order
#    # 指定手动配置的模式(默认为该模式)
#    strategy: manual
#    routes:
#      - name: 用户服务
#        # 真实子服务访问url地址-提供OpenAPI的文档
#        url: /user-service/v2/api-docs?group=default
#        service-name: yueshengoj-backend-user-service
#        # 路由前缀
#        # 兼容OpenAPI3规范在聚合时丢失contextPath属性的异常情况，由开发者自己配置contextPath,Knife4j的前端Ui做兼容处理,与url属性独立不冲突，仅OpenAPI3规范聚合需要，OpenAPI2规范不需要设置此属性,默认为(apiPathPrefix)
#        context-path: /
#        order: 2
#      - name: 题目服务
#        url: /question-service/v2/api-docs?group=default
#        service-name: yueshengoj-backend-question-service
#        # 路由前缀
#        context-path: /
#        order: 3
#      - name: 判题服务
#        url: /judge-service/v2/api-docs?group=default
#        service-name: yueshengoj-backend-judge-service
#        # 路由前缀
#        context-path: /
#        order: 4
